generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash  String
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  storeCashiers StoreCashier[]
}

enum UserRole {
  USER
  ADMIN
  CASHIER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id             String   @id @default(uuid())
  name           String
  purchasePrice  Float
  salePrice      Float
  imageUrl       String?
  quantity       Int
  createdAt      DateTime @default(now())
  storeProducts  StoreProduct[]
}

model Store {
  id        String    @id @default(uuid())
  name      String
  address   String
  cashiers  StoreCashier[]
  products  StoreProduct[]
  createdAt DateTime   @default(now())
}

model StoreCashier {
  id        String   @id @default(uuid())
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   String
  cashier   User     @relation(fields: [cashierId], references: [id])
  cashierId String
}

model StoreProduct {
  id        String   @id @default(uuid())
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@unique([storeId, productId])
}
